# string_similarity
=======
基于字符串和音素串的编辑距离的字符串相似度计算

## 算法简介
WER的计算，参考：https://martin-thoma.com/word-error-rate-calculation/
预研工作主要包括：
  整理测试集: ASR识别错误，音同字不同等，收集了90条测试
  算法调研： WER的原理和实现
  工程实现： 1，字符串转拼音串/音素串，整理字典，更新资源；2，字符串归一化；3，WER计算与solr搜索接口联合测试
  测试和分析：不同搜索方式和WER排序对结果的影响

## 代码框架和介绍
python_src/ # 实现WER计算（包括字符串归一化，字符串转拼音串等），实现WER计算与solr搜索接口联合测试
  utils/  # 文本处理的基本函数，包括全角转半角，繁体转简体，数字转汉字，字符串归一化等
  wer/  # wer计算的实现
  string_match_util.py  # 模糊匹配的基本函数（包含了utils的基本函数），包括wer的计算，预处理，字符串转拼音串等
  title_add_pinyin.py # 在资源中添加title_spell和title_phoneme字段
  str2spell.py    # 字符串转拼音串的整个流程，调用了string_match_util.py
  app_match.py    # 根据字符串和数据库的检索结果，计算字符串和拼音串的WER。没有加入和数据库检索的接口的匹配
  solr_app_match.py & search_solr.py   # 用title_str检索，计算WER的方式为字符串和音素串同时计算和排序
  solr_app_match_spell.py & search_solr_spell.py  # 用title_spell检索，计算WER的方式为字符串和音素串同时计算和排序
  solr_app_match_str_spell.py & search_solr_str_spell.py  # 用title_str和title_spell同时检索，计算WER的方式为字符串和音素串同时计算和排序
  test.py # 测试脚本

data/
  spell_wer_20.out  # 根据音素串的编辑距离WER排序, 显示前20条
  str_spell_wer_20.out  # 依次根据音素串和字符串的编辑距离WER排序, 显示前20条
  str_wer_20.out  # 根据字符串的编辑距离WER排序, 显示前20条
  test.in # 90条测试集
  test.out  # 测试集的分词结果, 拼音串和音素串

dict/
  phoneme_sum_wo_tone.utf8  # str & phoneme的无声调字典
  spell_sum_wo_tone.utf8  # str & spell的无声调字典
  title_phoneme.dict  # title和title的音素串
  title_spell.dict  # title和title的拼音串
  title_utf8  # resource中的title

eval/
  eval.py # 评估脚本
  eval.sh
  ref.out # 测试集的标准输出
  rst/
      spell # spell.out相对于ref.out的评估结果
      spell_wer
      str_spell
      str_spell_wer
      str_wer
      str_wer_comp_spell_wer
  spell.out # 用拼音串资源搜索，原始排序结果
  spell_wer.out # 用拼音串资源搜索，按照音素串WER的排序结果
  str.out # 用字符串资源搜索，原始排序结果
  str_spell.out # 用字符串和拼音串资源搜索，原始排序结果
  str_spell_wer.out # 用字符串和拼音串资源搜索，按照字符串WER和音素串WER的共同排序结果
  str_wer.out # 用字符串资源搜索，按照字符串WER的排序结果
  test_v3.txt # 测试集

rawdict/ # 原始字典和solr资源
    readme
    resource.json
    sum_utf8.dict

shurufa_pre_out/  # 百度分词工具，黑盒子，当时选用这个工具是因为：对分词工具不了解 & 识别组在使用该工具
                  可以替换成结巴分词，分词特性差别较小
    string_matching/
      title_seg
      title_seg.sh

## 测试结果
http://wiki.hobot.cc/pages/viewpage.action?pageId=41820252
